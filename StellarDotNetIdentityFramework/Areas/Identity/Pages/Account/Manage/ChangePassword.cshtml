@page
@model ChangePasswordModel
@{
    ViewData["Title"] = "Change password";
    ViewData["ActivePage"] = ManageNavPages.ChangePassword;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="change-password-form" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.OldPassword" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Please enter your old password." />
                <label asp-for="Input.OldPassword" class="form-label"></label>
                <span asp-validation-for="Input.OldPassword" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.NewPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please enter your new password." />
                <label asp-for="Input.NewPassword" class="form-label"></label>
                <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please confirm your new password." />
                <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            <input type="hidden" id="Input.ReEncryptedKeypairs" name="ReEncryptedKeypairs" />
            <button type="submit" class="w-100 btn btn-lg btn-primary">Update password</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/stellartools.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Fetch encrypted keypairs when the page loads
            fetch('/api/Keypairs/GetEncryptedKeypairs')
                .then(response => response.json())
                .then(data => {
                    window.encryptedKeypairs = data;
                })
                .catch(error => {
                    console.error('Error fetching keypairs:', error);
                });
        });

        document.getElementById('change-password-form').addEventListener('submit', async function (e) {
            e.preventDefault();

            const oldPassword = document.getElementById('Input_OldPassword').value;
            const newPassword = document.getElementById('Input_NewPassword').value;

            const reEncryptedKeypairs = [];

            for (let i = 0; i < window.encryptedKeypairs.length; i++) {
                const keypair = window.encryptedKeypairs[i];
                try {
                    const decryptedSecretKey = await decryptKeypair(keypair.encryptedKeyPair, oldPassword);

                    // Verify keypair is valid using Stellar SDK
                    const keypairObject = StellarSdk.Keypair.fromSecret(decryptedSecretKey);
                    const derivedPublicKey = keypairObject.publicKey();

                    // Compare the derived public key with the stored public key
                    if (derivedPublicKey !== keypair.publicKey) {
                        throw new Error('Invalid keypair: public key does not match');
                    }

                    // Re-encrypt the secret key with the new password
                    const reEncryptedKeypair = await encryptKeypair(decryptedSecretKey, newPassword);
                    reEncryptedKeypairs.push({
                        id: keypair.id,
                        encryptedKeyPair: reEncryptedKeypair
                    });
                } catch (error) {
                    console.error('Error processing keypair:', error);
                    alert('Error decrypting or verifying keypair. Please ensure your old password is correct.');
                    return;
                }
            }

            document.getElementById('Input_ReEncryptedKeypairs').value = JSON.stringify(reEncryptedKeypairs);

            // Submit the form
            this.submit();
        });

    </script>
}
