@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <input id="EncryptedSecret" name="Input.EncryptedSecret" type="hidden" />
            <input id="PublicKey" name="Input.PublicKey" type="hidden" />

            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <!-- ... [External logins section] -->
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/stellar-sdk/stellar-sdk.min.js" asp-append-version="true"></script>
    <script src="~/js/stellartools.js" asp-append-version="true"></script>
    <script>
        document.getElementById('registerForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            // Get a new keypair
            const keypair = StellarSdk.Keypair.random();
            document.getElementById('PublicKey').value = keypair.publicKey();

            // Set the encrypted secret
            const password = document.getElementById('Input_Password').value;
                    document.getElementById('EncryptedSecret').value = await getEncryptedSecret(keypair.secret(), password);

            // Submit the form
            this.submit();
            });
    </script>
}
